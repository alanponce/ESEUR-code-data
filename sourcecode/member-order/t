2c2
< # vis-key_order-pref.R,  4 Jan 16
---
> # java-member-ord.R,  7 Jun 18
21a22,23
> base_dir=paste0(ESEUR_dir, "sourcecode/member-order/")
> # csv_files=list.files(base_dir, pattern="*.csv.xz")
35c37
< # Get index in pref_order that items in actual order appear
---
> # Get index into pref_order that items in actual_order appear
38,42c40,41
< # We want to check the index of items is in increasing order
< m_order=order(m)
< 
< # No need to have a separate test for each vector length
< return (identical(m_order, order(m_order)))
---
> # Check that the index is in increasing order
> return (length(which(diff(m) < 0)) == 0)
48,49c47
< m_ord=read.csv(paste0(ESEUR_dir, "sourcecode/member-order/", csv_file), sep=";",
< 				 as.is=TRUE)
---
> m_ord=read.csv(paste0(base_dir, "/", csv_file), sep=";",	as.is=TRUE)
81a80,97
> summarise_primary_order=function(csv_file)
> {
> m_ord=read_data(csv_file)
> t=in_primary_order(m_ord)
> 
> return(data.frame(csv_file, num_classes=length(t),
>                      frac_not_ordered=length(which(t == FALSE))/length(t)))
> }
> 
> 
> # # Check if the JCC attribute controls the primary order
> t=adply(csv_files, 1, function(X) summarise_primary_order(X))
> 
> 
> # # How many classes are there?
> sum(aaply(csv_files, 1, function(X) length(unique(read_data(X)$file))))
> 
> 
112,113c128,129
< if (sum(vis_info$length[1:length(vis_init_seq)])/sum(vis_info$length) < 0.9)
<    vis_less_90 <<- vis_less_90+1
---
> vis_less_90 <<- vis_less_90+
> 	as.numeric(sum(vis_info$length[1:length(vis_init_seq)])/sum(vis_info$length) < 0.9)
241,243d256
< plot_layout(1, 4)
< par(bty="n")
< 
253d265
< #print(c(seq_count, multiseq_count, vis_less_90))
255,256c267,270
< vplim=range(range(vis_plot_1), range(vis_plot_2),
<             range(vis_plot_3), range(vis_plot_4))
---
> print(c(seq_count, multiseq_count, vis_less_90))
> 
> all_plots=cbind(vis_plot_1, vis_plot_2, vis_plot_3, vis_plot_4)
> class(all_plots)=class(vis_plot_1)
258,259d271
< plot(vis_plot_1, main="", ylim=vplim,
<                    ylab="Worth estimate")
261,262c273
< plot(vis_plot_2, main="", ylim=vplim,
<          yaxt="n", ylab="")
---
> # plot_wide()
264,265c275,291
< plot(vis_plot_3, main="", ylim=vplim,
<          yaxt="n", ylab="")
---
> par(bty="n")
> 
> plot(all_plots, main="",
> 	xaxt="n", yaxt="n",
> 	ylab="Worth estimate\n")
> 
> seq_count <<- 0
> multiseq_count <<- 0
> vis_less_90 <<- 0
> attribute_list=method_subcat_str
> #vis_plot_3=get_vis_plot(pref_ent_order[3], FALSE)
> subcat_plot=get_vis_plot(pref_ent_order[4], FALSE)
> print(c(seq_count, multiseq_count, vis_less_90))
> 
> vplim=range(subcat_plot)
> 
> par(bty="n")
267,268c293,294
< plot(vis_plot_4, main="", ylim=vplim,
<          yaxt="n", ylab="")
---
> plot(subcat_plot, main="",
> 	ylab="Worth estimate")
